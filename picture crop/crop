#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Nov 28 17:04:22 2019

@author: jinjinli
"""
"""用Pythonp批量裁剪图片"""

from PIL import Image
import matplotlib.pyplot as plt
import os

def mkdir(path):
    # 引入模块
    import os
 
    # 去除首位空格
    path=path.strip()
    # 去除尾部 \ 符号
    path=path.rstrip("\\")
 
    # 判断路径是否存在
    # 存在     True
    # 不存在   False
    isExists=os.path.exists(path)
 
    # 判断结果
    if not isExists:
        # 如果不存在则创建目录
        #创建目录操作函数
        os.makedirs(path) 
 
  #   print（path，'创建成功'）
        return True
    else:
        # 如果目录存在则不创建，并提示目录已存在
  #     print （path，' 目录已存在'）
        return False




# 定义待批量裁剪图像的路径地址
IMAGE_INPUT_PATH = '/Users/jinjinli/000myfile/test2'

# 定义要创建的目录
mkpath="/Users/jinjinli/000myfile/test3"
# 调用函数
mkdir(mkpath)
IMAGE_OUTPUT_PATH = mkpath

# 定义裁剪后的图像存放地址
#IMAGE_OUTPUT_PATH = '/Users/jinjinli/000myfile/test'
# 定义裁剪图片左、上、右、下的像素坐标
BOX_LEFT, BOX_UP, BOX_RIGHT, BOX_DOWN = 255, 475, 525, 583

for each_image in os.listdir(IMAGE_INPUT_PATH):
    # 每个图像全路径
    
  
    image_input_fullname = IMAGE_INPUT_PATH + '/' + each_image
    if image_input_fullname.endswith('.png'):  
    # PIL库打开每一张图像
      img = Image.open(image_input_fullname)

      plt.figure("image_input_fullname")
      plt.subplot(1, 2, 1)
      plt.imshow(img)
      plt.axis('off')
      print(img.format, img.size, img.mode)
    # 从原始图像返回一个矩形区域，区域是一个4元组定义左上右下像素坐标
      box = (BOX_LEFT, BOX_UP, BOX_RIGHT, BOX_DOWN)
    # 进行roi裁剪
      roi_area = img.crop(box)
      plt.subplot(1, 2, 2)

      plt.imshow(roi_area)
      plt.axis('off')
      print(roi_area.format, roi_area.size, roi_area.mode)
      plt.show()
    # 裁剪后每个图像的路径+名称
      image_output_fullname = IMAGE_OUTPUT_PATH + "/" + each_image
    # 存储裁剪得到的图像
      roi_area.save(image_output_fullname)
      print('{0} crop done.'.format(each_image))
      
      
      
      
      

 


